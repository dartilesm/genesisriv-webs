---
import AtIcon from "@repo/ui/src/assets/icons/at.svg";
import ExternalIcon from "@repo/ui/src/assets/icons/external-link.svg";
import InstagramIcon from "@repo/ui/src/assets/icons/instagram.svg";
import LinkedinIcon from "@repo/ui/src/assets/icons/linkedin2.svg";
import XIcon from "@repo/ui/src/assets/icons/x.svg";
import Button from "@repo/ui/src/button.astro";
import RichText from "@repo/ui/src/rich-text/rich-text.astro";
import type { LinkTree } from "@sanity-app/sanity.types";
import sanitizeImage from "@sanity-app/utils/sanitize-image";
import type { SanityImageSource } from "@sanity/image-url/lib/types/types";
type Props = {
  data: LinkTree;
};

const { data } = Astro.props;
---

<div class='flex flex-col items-center gap-6'>
  {/* Profile Image */}
  <div class='w-32 h-32 rounded-full overflow-hidden bg-gray-100'>
    <img
      src={sanitizeImage(data.photo as SanityImageSource, { format: "webp" }).url()}
      alt={data.photo?.alt || "Profile"}
      class='w-full h-full object-cover'
    />
  </div>

  {/* Profile Info */}
  <div class='flex flex-col gap-4 text-center'>
    <h1 class='text-5xl font-bold text-gray-900'>
      <span
        class='bg-gradient-to-r from-purple-700 via-purple-600 to-purple-500 dark:from-purple-300 dark:via-purple-400 dark:to-purple-500 text-transparent bg-clip-text'
      >
        {data?.name}
      </span>
    </h1>
    <RichText class='font-light [&>strong]:font-bold' value={data.description} />
  </div>

  {/* Quick Action Buttons */}
  <div class='flex gap-4 w-full max-w-[280px] items-center'>
    {
      data.quickLinks?.map((quickLink) => {
        return (
          <Button
            variant={quickLink.isIconButton ? "icon" : "tertiary"}
            class='flex-1 gap-2'
            as='a'
            href={quickLink.url}
            target='_blank'
          >
            {quickLink.icon === "linkedin" && <LinkedinIcon class='w-6 h-6' />}
            {quickLink.icon === "instagram" && <InstagramIcon class='w-6 h-6' />}
            {quickLink.icon === "x" && <XIcon class='w-6 h-6' />}
            {quickLink.icon === "website" && <ExternalIcon class='w-6 h-6' />}
            {quickLink.icon === "email" && <AtIcon class='w-6 h-6' />}
            {!quickLink.isIconButton && quickLink.name}
            {quickLink.isIconButton && <span class='sr-only'>{quickLink.name}</span>}
            {!quickLink.isIconButton && <ExternalIcon class='w-4 h-4' />}
          </Button>
        );
      })
    }
    <!-- <Button
      as='a'
      href={data.links?.find((link) => link.type === "email")?.url || "#"}
      variant='ghost'
      class='flex-1'
    >
      <span class='flex items-center gap-2'>
        <AtIcon class='w-6 h-6' />
        E-Mail
      </span>
    </Button> -->
  </div>
</div>
