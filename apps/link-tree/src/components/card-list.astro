---
import ExternalIcon from "@repo/ui/src/assets/icons/external-link.svg";
import LinkIcon from "@repo/ui/src/assets/icons/link.svg";
import Button from "@repo/ui/src/button.astro";
import type { LinkTree } from "@sanity-app/sanity.types";
import sanitizeImage from "@sanity-app/utils/sanitize-image";
import type { SanityImageSource } from "@sanity/image-url/lib/types/types";
import { Image } from "astro:assets";
import Card from "./card.astro";

type AdditionalLinks = NonNullable<NonNullable<LinkTree["additionalLinks"]>["links"]>[number];
type AdditionalLinksLink = NonNullable<AdditionalLinks["links"]>[number];

type Props = {
  items: NonNullable<NonNullable<LinkTree["additionalLinks"]>["links"]>[number]["links"];
};

const { items } = Astro.props;
---

<div class='flex flex-col gap-4'>
  {
    items?.map((item) => {
      if (item.type === "button") {
        return (
          <Button
            as='a'
            href={item.url}
            aria-label={item?.name}
            target='_blank'
            variant='tertiary'
            class='pl-3'
          >
            <div class='flex items-center justify-between w-full'>
              {!item.image && <LinkIcon class='w-5 h-5' />}
              {(item as AdditionalLinksLink)?.image && (
                <Image
                  src={sanitizeImage((item as AdditionalLinksLink).image as SanityImageSource, {
                    format: "webp",
                  }).url()}
                  alt={(item as AdditionalLinksLink).image?.alt || item.name}
                  class='max-w-24 h-auto rounded-2xl'
                  inferSize={true}
                />
              )}
              <span class='text-base font-medium'>{item?.name}</span>
              <ExternalIcon class='w-3 h-3 opacity-70' />
            </div>
          </Button>
        );
      }
      return (
        <Card
          as='a'
          href={item.url}
          target='_blank'
          title={item.name}
          subtitle={item.description}
          image={
            item.image &&
            sanitizeImage(item.image as SanityImageSource, {
              format: "webp",
            }).url()
          }
          imageAlt={item.image?.alt || "link icon"}
          badge={item.label}
        />
      );
    })
  }
</div>
