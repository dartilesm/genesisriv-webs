---
import CardList from "@/components/card-list.astro";
import LinksHeadingAndIcon from "@/components/links-heading-and-icon.astro";
import RootLayout from "@/layouts/root-layout.astro";
import { loadQuery } from "@/utils/sanity-load-query";
import ArrowRightIcon from "@repo/ui/src/assets/icons/arrow-right.svg";
import Button from "@repo/ui/src/button.astro";
import ResourceIcon from "@repo/ui/src/assets/icons/bulk/resource.svg";
import type { LinkTree, Metadata } from "@sanity-app/sanity.types";
const {
  data: [siteData],
} = await loadQuery<LinkTree[]>({
  query: `*[_type == "linkTree"]`,
});

const {
  data: [linkTreeMetadata],
} = await loadQuery<Metadata[]>({
  query: `*[_type == "metadata"]`,
});
---

<RootLayout className='space-y-0 py-0' bodyClassName='items-start' metadata={linkTreeMetadata}>
  <div class='w-full max-w-xl mx-auto flex flex-col gap-4 min-h-[calc(100vh-2rem)]'>
    {/* Header with back button */}
    <header
      class='flex items-center p-2 sticky top-0 z-10 gap-2 transition-all duration-300 ease-in-out group data-[visible=true]:bg-white -mx-4 data-[visible=true]:border-b data-[visible=true]:border-purple-100 h-11'
      id='header'
    >
      <Button as='a' variant='icon' href='/'>
        <title>Back button</title>
        <svg
          xmlns='http://www.w3.org/2000/svg'
          class='h-5 w-5'
          viewBox='0 0 24 24'
          fill='none'
          stroke='currentColor'
          stroke-width='2'
        >
          <path d='M15 19l-7-7 7-7'></path>
        </svg>
      </Button>
      <LinksHeadingAndIcon
        data={{
          name: siteData["additionalLinks"]?.pageTitle,
          description: siteData["additionalLinks"]?.pageDescription,
          icon: "link",
          _key: "123",
        }}
        isInNav
        className='transition-[opacity,_margin] duration-200 opacity-0 group-data-[visible=true]:opacity-100 ease-in-out'
      />
    </header>
    <div class='flex flex-col gap-8'>
      <LinksHeadingAndIcon
        data={{
          name: siteData["additionalLinks"]?.pageTitle,
          description: siteData["additionalLinks"]?.pageDescription,
          icon: "link",
          _key: "123",
        }}
        id='page-heading-container'
      />
      <div class='flex-1 flex flex-col w-full gap-4'>
        {
          siteData["additionalLinks"]?.links?.map((link) => (
            <>
              <section class='space-y-6'>
                <header
                  class='flex items-center justify-between top-11 sticky z-10 py-2 px-4 data-[is-stuck=true]:bg-purple-100 data-[is-stuck=true]:border-b [data-is-stuck=true]:border-purple-100 -mx-4 transition-all duration-300 ease-in-out'
                  data-section-header
                >
                  <h2 class='text-xl font-semibold text-gray-900 inline-flex flex-row items-center gap-2'>
                    <ResourceIcon class='w-5 h-5 text-purple-600' />
                    {link.name}
                  </h2>
                  <a
                    href={`/l/${link.slug}`}
                    class='text-md text-purple-600 hover:text-purple-700 font-medium transition-colors inline-flex flex-row justify-between items-center gap-2'
                  >
                    Ver todo
                    <ArrowRightIcon class='w-3 h-3' />
                  </a>
                </header>
                <CardList items={link.links.slice(0, 3)} />
              </section>
              <section class='space-y-6'>
                <header
                  class='flex items-center justify-between top-11 sticky z-10 py-2 px-4 data-[is-stuck=true]:bg-purple-100 data-[is-stuck=true]:border-b [data-is-stuck=true]:border-purple-100 -mx-4 transition-all duration-300 ease-in-out'
                  data-section-header
                >
                  <h2 class='text-xl font-semibold text-gray-900 inline-flex flex-row items-center gap-2'>
                    <ResourceIcon class='w-5 h-5 text-purple-600' />
                    {link.name}
                  </h2>
                  <a
                    href={`/l/${link.slug}`}
                    class='text-md text-purple-600 hover:text-purple-700 font-medium transition-colors inline-flex flex-row justify-between items-center gap-2'
                  >
                    Ver todo
                    <ArrowRightIcon class='w-3 h-3' />
                  </a>
                </header>
                <CardList items={link.links.slice(0, 3)} />
              </section>
            </>
          ))
        }
      </div>
    </div>
  </div>
</RootLayout>

<script>
  import { inView } from "motion";

  function onPageLoad() {
    const mainHeadingOfThePage = document.getElementById("page-heading-container");
    const header = document.getElementById("header");

    if (!mainHeadingOfThePage || !header) return;

    // Check if the main heading is in view
    const isMainHeadingInView =
      mainHeadingOfThePage.getBoundingClientRect().height < window.scrollY;

    if (isMainHeadingInView) {
      header.setAttribute("data-visible", "true");
    }

    inView(mainHeadingOfThePage, () => {
      // Set css var
      header.setAttribute("data-visible", "false");
      // Effect when target leaves viewport
      return () => {
        header.setAttribute("data-visible", "true");
      };
    });

    // Add event listener to the section headers to check if the section is stuck
    const sectionHeaders = document.querySelectorAll("[data-section-header]");

    sectionHeaders.forEach((sectionHeader) => {
      function setStickyState() {
        const isStuck =
          sectionHeader.getBoundingClientRect().top > 0 &&
          sectionHeader.getBoundingClientRect().top <= 44;
        console.log(isStuck);
        sectionHeader.setAttribute("data-is-stuck", isStuck.toString());
      }

      window.addEventListener("scroll", setStickyState);
    });
  }

  onPageLoad();

  document.addEventListener("astro:page-load", onPageLoad);
</script>
