---
import LinksContainer from "@/components/links-container.astro";
import LinksHeadingAndIcon from "@/components/links-heading-and-icon.astro";
import RootLayout from "@/layouts/root-layout.astro";
import { loadQuery } from "@/utils/sanity-load-query";
import Button from "@repo/ui/src/button.astro";
import type { LinkTree, Metadata } from "@sanity-app/sanity.types";

const { id } = Astro.params;

const {
  data: [siteData],
} = await loadQuery<LinkTree[]>({
  query: `*[_type == "linkTree"]`,
});

const {
  data: [linkTreeMetadata],
} = await loadQuery<Metadata[]>({
  query: `*[_type == "metadata"]`,
});

// Get referrer
const referrer = Astro.request.headers.get("referer");
const currentPathname = Astro.url.pathname;

const { pathname } = new URL(referrer || Astro.url);
const previousPage = pathname === currentPathname ? "/" : pathname;

const idIsInLinkTree = siteData?.additionalLinks?.links?.some((link) => link.slug === id);

if (!idIsInLinkTree) {
  return Astro.redirect("/");
}
---

<RootLayout className='space-y-0 py-0' bodyClassName='items-start' metadata={linkTreeMetadata}>
  <div class='w-full max-w-xl mx-auto flex flex-col gap-4 min-h-[calc(100vh-2rem)]'>
    {/* Header with back button */}
    <header
      class='flex items-center p-2 sticky top-0 z-10 gap-2 transition-all duration-300 ease-in-out group data-[visible=true]:bg-white -mx-2 data-[visible=true]:border-b data-[visible=true]:border-purple-100 h-11'
      id='header'
    >
      <Button as='a' variant='icon' href='/links'>
        <title>Back button</title>
        <svg
          xmlns='http://www.w3.org/2000/svg'
          class='h-5 w-5'
          viewBox='0 0 24 24'
          fill='none'
          stroke='currentColor'
          stroke-width='2'
        >
          <path d='M15 19l-7-7 7-7'></path>
        </svg>
      </Button>
      <LinksHeadingAndIcon
        data={siteData?.additionalLinks?.links?.[0]}
        isInNav
        className='transition-[opacity,_margin] duration-200 opacity-0 group-data-[visible=true]:opacity-100 ease-in-out'
      />
    </header>

    <LinksContainer data={siteData?.additionalLinks?.links?.[0]} />
  </div>
</RootLayout>

<script>
  import { inView } from "motion";

  function onPageLoad() {
    const mainHeadingOfThePage = document.getElementById("page-heading-container");
    const header = document.getElementById("header");

    if (!mainHeadingOfThePage || !header) return;

    // Check if the main heading is in view
    const isMainHeadingInView =
      mainHeadingOfThePage.getBoundingClientRect().height < window.scrollY;

    if (isMainHeadingInView) {
      header.setAttribute("data-visible", "true");
    }

    inView(mainHeadingOfThePage, () => {
      // Set css var
      header.setAttribute("data-visible", "false");
      // Effect when target leaves viewport
      return () => {
        header.setAttribute("data-visible", "true");
      };
    });
  }

  onPageLoad();

  document.addEventListener("astro:page-load", onPageLoad);
</script>
